"""Save a payment method token (stripe_customer_id) for a user.

When the user fills out the payment details form in the UI, we send the new
info to Stripe (using the Stripe.js library). Stripe always gives us a
so-called "single-use token" in return, no matter how bad the info was that we
posted. This present script is called next. It takes the token and tries to
associate it with a Stripe Customer object (creating one as needed). It's at
this point that Stripe validates the credit card details, which they don't
charge us for directly.

"""
from aspen import Response
from gittip import billing

#=========================================================================== ^L

if user.ANON:
    raise Response(404)

request.allow('GET')

if qs.get('action') == 'delete':
    billing.clear(user.id, user.stripe_customer_id)
    request.redirect('/credit-card.html')
else:

    # Associate the single-use token representing the credit card details (we
    # call it "tok" here because that's the prefix Stripe uses in the token
    # itself) the user entered with a Stripe Customer. Stripe only ever gives
    # us one error at a time.

    tok = qs.get('tok')
    if tok is None:
        raise Response(400) 

    error = billing.associate(user.id, user.stripe_customer_id, tok)
    if error:
        out = {"problem": "Problem", "error": error}
    else:
        out = {"problem": ""}

response.body = out
