"""OAuth authentication callback for Venmo
"""

import time
import datetime
import pytz

from aspen import resources, Response
from gittip.elsewhere import venmo
from gittip.utils import redirect_confirmation
from gittip.models._mixin_elsewhere import NeedConfirmation

[-----------------------------]

if user.ANON:
    raise Response(404)

data = venmo.oauth_dance(website, qs)

account = venmo.VenmoAccount(website.db, data['user']['id'], data['user'])

expires = datetime.datetime.utcnow() + datetime.timedelta(seconds=data['expires_in'])
account.set_oauth_tokens(data['access_token'], data['refresh_token'], expires)

try:
    user.participant.take_over(account)
except NeedConfirmation, obstacles:
    redirect_confirmation(website, request)

[-----------------------------] text/plain

HELLO
