"""Associate a Bountysource account with a Gittip account.

First, must receive token from Bountysource by authorizing the application.
"""
from urllib import urlencode

from aspen import Response
from gittip.elsewhere import bountysource

# ========================== ^L

if user.ANON:
    raise Response(404)

# Did something go wrong with account link at Bountysource?
# If so, redirect to a failure page with an error message.
if 'error' in qs:
    new_qs = urlencode({'msg': qs['error']})
    request.redirect('/on/bountysource/failure.html?%s' % new_qs)

# Gittip generated access token, passed all the way through the auth process
token = qs.get('access_token', '')

# find participant from Bountysource created access token.
# it better be the logged in user, dammit.
participant = bountysource.get_participant_via_access_token(token)

if not participant or participant != user:

    # This will be the case if the user clicks the 'Reject' button
    # on the Bountysource account authorize screen.

    request.redirect('/%s/' % user.username)

else:
    # create a linked account
    user_info = bountysource.filter_user_info(qs)
    account = bountysource.BountysourceAccount(user_info['id'], user_info)

    # associate with the Gittip participant
    user.take_over(account)

    request.redirect('/%s' % account.participant)

# ========================== ^L text/plain
