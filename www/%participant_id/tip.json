"""Get or change the authenticated user's tip to this person.

Unauthenticated users will always get back {}, so retval.amount will be
undefined in JavaScript. Authenticated users can pass "amount" in the
querystring to change their tip. It will be ignored if you try to tip yourself,
otherwise it must be one of: "0.00", "0.08", "0.16", "0.32", "0.64", "1.28"
(you'll get a 400 otherwise). The return value for authenticated users is
{"amount": "0.08"}, where the value is guaranteed to be one of those same
strings, or null if it's yourself.

"""
import decimal

from aspen import Response
from gittip import AMOUNTS, db
from gittip.networks import github


# ========================================================================== ^L


out = {}
if not user.ANON:

    # Get tipper and tippee.
    # ======================

    tipper = user.id
    if 'participant_id' in path:    # gittip
        tippee = path['participant_id']
    elif 'login' in path:           # github
        tippee = github.resolve(path['login'])
    else:
        raise Response(400, "can't find tippee")


    # Get and maybe set amount.
    # =========================

    if tippee == tipper:
        amount = None
    else:
        
        # Add a new tip record.
        # =====================
        # Insert instead of update. The analytics may be interesting some day.

        if 'amount' in qs:
            try:
                amount = decimal.Decimal(qs['amount'])
                if amount not in AMOUNTS:
                    raise ValueError 
            except (decimal.InvalidOperation, ValueError):
                raise Response(400, "bad amount")

            NEW_TIP = """\
                    
                INSERT INTO tips
                            (ctime, tipper, tippee, amount)
                     VALUES ( COALESCE (( SELECT ctime 
                                            FROM tips 
                                           WHERE (tipper=%s AND tippee=%s)
                                           LIMIT 1
                                          ), CURRENT_TIMESTAMP)
                            , %s, %s, %s
                             )

            """
            db.execute(NEW_TIP, (tipper, tippee, tipper, tippee, amount))
            amount = str(amount)


        # Fetch the current tip record.
        # =============================

        else:
            FETCH = """\
                    
                SELECT amount
                  FROM tips
                 WHERE tippee=%s AND tipper=%s
              ORDER BY mtime DESC
                 LIMIT 1
                 
            """
            rec = db.fetchone(FETCH, (tippee, tipper))
            if rec is None:
                amount = "0.00"
            else:
                amount = str(rec['amount'])

    out = {"amount": amount}

response.body = out
