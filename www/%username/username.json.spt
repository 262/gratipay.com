from aspen import Response, log_dammit
from gittip.models.participant import Participant
from gittip.models.participant import ProblemChangingUsername


[-----------------------------------------------------------------------------]

if user.ANON:
    raise Response(404)

new_username = request.body['username']

try:
    old_username = user.participant.username
    user.participant.change_username(new_username)
    response.body = {"username": new_username}
    log_dammit("user with username %s has become username %s" % (old_username, new_username))
except ProblemChangingUsername, e:
    response = Response(400, {"error": str(e)})
